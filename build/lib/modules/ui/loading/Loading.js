/// <reference path="../../../../../../typings/github-electron/github-electron-renderer.d.ts" />
var Loading = (function () {
    function Loading() {
    }
    /**
     * show Loading
     */
    Loading.show = function () {
        var el = document.createElement('div');
        el.classList.add(Const.CLASS_NAME);
        document.appendChild(el);
        el.focus();
        // TODO: Invalid KeyBoard Input
    };
    /**
     * hide Loading
     */
    Loading.hide = function () {
        var loadings = document.querySelectorAll("." + Const.CLASS_NAME);
        for (var i = 0, len = loadings.length; i < len; i++) {
            document.removeChild(loadings[i]);
        }
    };
    return Loading;
})();
/**
 * Loading Class Const
 */
var Const;
(function (Const) {
    Const.CLASS_NAME = "loading";
})(Const || (Const = {}));
module.exports = Loading;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9tb2R1bGVzL3VpL2xvYWRpbmcvTG9hZGluZy50cyJdLCJuYW1lcyI6WyJMb2FkaW5nIiwiTG9hZGluZy5jb25zdHJ1Y3RvciIsIkxvYWRpbmcuc2hvdyIsIkxvYWRpbmcuaGlkZSIsIkNvbnN0Il0sIm1hcHBpbmdzIjoiQUFBQSxnR0FBZ0c7QUFFaEc7SUFBQUE7SUF3QkFDLENBQUNBO0lBdEJBRDs7T0FFR0E7SUFDV0EsWUFBSUEsR0FBbEJBO1FBQ0NFLElBQUlBLEVBQUVBLEdBQUdBLFFBQVFBLENBQUNBLGFBQWFBLENBQUNBLEtBQUtBLENBQUNBLENBQUNBO1FBQ3ZDQSxFQUFFQSxDQUFDQSxTQUFTQSxDQUFDQSxHQUFHQSxDQUFDQSxLQUFLQSxDQUFDQSxVQUFVQSxDQUFDQSxDQUFDQTtRQUNuQ0EsUUFBUUEsQ0FBQ0EsV0FBV0EsQ0FBQ0EsRUFBRUEsQ0FBQ0EsQ0FBQ0E7UUFDekJBLEVBQUVBLENBQUNBLEtBQUtBLEVBQUVBLENBQUNBO1FBRVhBLCtCQUErQkE7SUFDaENBLENBQUNBO0lBRURGOztPQUVHQTtJQUNXQSxZQUFJQSxHQUFsQkE7UUFDQ0csSUFBSUEsUUFBUUEsR0FBR0EsUUFBUUEsQ0FBQ0EsZ0JBQWdCQSxDQUFDQSxHQUFHQSxHQUFHQSxLQUFLQSxDQUFDQSxVQUFVQSxDQUFDQSxDQUFDQTtRQUVqRUEsR0FBR0EsQ0FBQ0EsQ0FBQ0EsR0FBR0EsQ0FBQ0EsQ0FBQ0EsR0FBR0EsQ0FBQ0EsRUFBRUEsR0FBR0EsR0FBR0EsUUFBUUEsQ0FBQ0EsTUFBTUEsRUFBRUEsQ0FBQ0EsR0FBR0EsR0FBR0EsRUFBRUEsQ0FBQ0EsRUFBRUEsRUFBRUEsQ0FBQ0E7WUFDckRBLFFBQVFBLENBQUNBLFdBQVdBLENBQUNBLFFBQVFBLENBQUNBLENBQUNBLENBQUNBLENBQUNBLENBQUNBO1FBQ25DQSxDQUFDQTtJQUNGQSxDQUFDQTtJQUNGSCxjQUFDQTtBQUFEQSxDQXhCQSxBQXdCQ0EsSUFBQTtBQUdEOztHQUVHO0FBQ0gsSUFBTyxLQUFLLENBRVg7QUFGRCxXQUFPLEtBQUssRUFBQSxDQUFDO0lBQ0NJLGdCQUFVQSxHQUFHQSxTQUFTQSxDQUFDQTtBQUNyQ0EsQ0FBQ0EsRUFGTSxLQUFLLEtBQUwsS0FBSyxRQUVYO0FBUEQsaUJBQVMsT0FBTyxDQUFDIiwiZmlsZSI6ImxpYi9tb2R1bGVzL3VpL2xvYWRpbmcvTG9hZGluZy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vLyA8cmVmZXJlbmNlIHBhdGg9XCIuLi8uLi8uLi8uLi8uLi8uLi90eXBpbmdzL2dpdGh1Yi1lbGVjdHJvbi9naXRodWItZWxlY3Ryb24tcmVuZGVyZXIuZC50c1wiIC8+XG5cbmNsYXNzIExvYWRpbmcge1xuXHRcblx0LyoqXG5cdCAqIHNob3cgTG9hZGluZ1xuXHQgKi9cblx0cHVibGljIHN0YXRpYyBzaG93KCk6dm9pZCB7XG5cdFx0dmFyIGVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG5cdFx0ZWwuY2xhc3NMaXN0LmFkZChDb25zdC5DTEFTU19OQU1FKTtcblx0XHRkb2N1bWVudC5hcHBlbmRDaGlsZChlbCk7XG5cdFx0ZWwuZm9jdXMoKTtcblx0XHRcblx0XHQvLyBUT0RPOiBJbnZhbGlkIEtleUJvYXJkIElucHV0XG5cdH1cblx0XG5cdC8qKlxuXHQgKiBoaWRlIExvYWRpbmdcblx0ICovXG5cdHB1YmxpYyBzdGF0aWMgaGlkZSgpOnZvaWQge1xuXHRcdHZhciBsb2FkaW5ncyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIuXCIgKyBDb25zdC5DTEFTU19OQU1FKTtcblx0XHRcblx0XHRmb3IgKHZhciBpID0gMCwgbGVuID0gbG9hZGluZ3MubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcblx0XHRcdGRvY3VtZW50LnJlbW92ZUNoaWxkKGxvYWRpbmdzW2ldKTtcblx0XHR9XG5cdH1cbn1cbmV4cG9ydCA9IExvYWRpbmc7XG5cbi8qKlxuICogTG9hZGluZyBDbGFzcyBDb25zdFxuICovXG5tb2R1bGUgQ29uc3R7XG5cdGV4cG9ydCBjb25zdCBDTEFTU19OQU1FID0gXCJsb2FkaW5nXCI7XG59Il0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9