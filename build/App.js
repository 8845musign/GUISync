/// <reference path="../../typings/github-electron/github-electron-renderer.d.ts" />;
var browserSyncService = require('./lib/modules/services/BrowserSyncService');
var settingModel = require('./lib/modules/models/SettingModel');
var consoleService = require('./lib/modules/services/consoleService');
var settingFileService = require('./lib/modules/services/SettingFileService');
var dialog = require('./lib/modules/ui/dialog/dialog');
var App = (function () {
    function App() {
        this.browserSync = new browserSyncService.BrowserSyncService();
    }
    App.prototype.start = function () {
        dialog.Dialog.normal({ text: "テキストだよ", buttonText: "hoge" });
        this.btnStart = document.getElementById('btnStart');
        this.btnInstall = document.getElementById('btnModuleInstall');
        this.btnStop = document.getElementById('btnStop');
        this.console = new consoleService.ConsoleService('#windowConsole');
        //    this.btnStop.disabled = true;
        this.bind();
    };
    App.prototype.bind = function () {
        this.btnStart.addEventListener('click', this.onClickStartBtn.bind(this));
        this.btnInstall.addEventListener('click', this.onClickInstallBtn.bind(this));
        this.btnStop.addEventListener('click', this.onClickStopBtn.bind(this));
    };
    App.prototype.onClickStartBtn = function (e) {
        if (this.browserSync.isRunning() === true)
            return;
        this.createSettingFile();
        var start = this.browserSync.start();
        start.on('start', function (data) {
            this.console.log(data);
        }.bind(this));
        start.on('error', function (data) {
            this.console.log(data);
        }.bind(this));
        this.btnStart.disabled = false;
        this.btnStop.disabled = true;
        e.preventDefault();
    };
    App.prototype.onClickInstallBtn = function (e) {
        var install = browserSyncService.BrowserSyncService.install();
        install.on('install', function (data) {
            this.console.log(data);
            this.btnInstall.disabled = false;
        }.bind(this));
        install.on('error', function (data) {
            this.console.log(data);
            this.btnInstall.disabled = false;
        }.bind(this));
    };
    App.prototype.onClickStopBtn = function (e) {
        if (this.browserSync.isRunning() === false)
            return;
        this.browserSync.stop();
        this.btnStart.disabled = false;
        e.preventDefault();
    };
    App.prototype.createSettingFile = function () {
        var user = document.getElementById('authUser').value;
        var pass = document.getElementById('authPass').value;
        var proxyTarget = document.getElementById('proxyTarget').value;
        var setting = new settingModel.SettingModel({
            target: proxyTarget,
            basicId: user,
            basicPassword: pass
        });
        settingFileService.SettingFileService.create(setting);
    };
    return App;
})();

//# sourceMappingURL=data:application/json;base64,